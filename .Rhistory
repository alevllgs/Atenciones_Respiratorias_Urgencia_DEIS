# Imprimir el contenido si la solicitud fue exitosa
print(content(response, "text"))
} else {
# Manejar el error si la solicitud no fue exitosa
print("Error al obtener los datos.")
}
library(httr)
url <- 'https://datos.gob.cl/api/3/action/datastore_search?resource_id=2c44d782-3365-44e3-aefb-2c8b8363a1bc&limit=5&q=title:jones'
response <- GET(url)
# Verificar el estado de la solicitud
if (http_status(response)$status_type == "Success") {
# Imprimir el contenido si la solicitud fue exitosa
print(content(response, "text"))
} else {
# Manejar el error si la solicitud no fue exitosa
print("Error al obtener los datos.")
}
library(httr)
url <- 'https://datos.gob.cl/api/3/action/datastore_search?resource_id=2c44d782-3365-44e3-aefb-2c8b8363a1bc&limit=5&q=title:jones'
response <- GET(url)
# Verificar el estado de la solicitud
status <- http_status(response)$status_type
print(status)
# Imprimir la respuesta completa
print(content(response))
library(httr)
url <- 'https://datos.gob.cl/api/3/action/datastore_search?resource_id=2c44d782-3365-44e3-aefb-2c8b8363a1bc&limit=5&q=title:jones'
response <- GET(url)
# Verificar el estado de la solicitud
status <- http_status(response)$status_type
print(status)
# Imprimir la respuesta completa
print(content(response))
response
library(httr)
library(jsonlite)
url <- 'https://datos.gob.cl/api/3/action/datastore_search?resource_id=2c44d782-3365-44e3-aefb-2c8b8363a1bc&limit=5&q=title:jones'
response <- GET(url)
# Verificar el estado de la solicitud
if (http_status(response)$status_type == "Success") {
# Parsear la respuesta JSON
json_content <- content(response, "text")
data <- fromJSON(json_content)$result$records
# Convertir a un dataframe
df <- as.data.frame(data)
# Imprimir el dataframe
print(df)
} else {
# Manejar el error si la solicitud no fue exitosa
print("Error al obtener los datos.")
}
install.packages("jsonlite")
install.packages("jsonlite")
library(httr)
library(jsonlite)
url <- 'https://datos.gob.cl/api/3/action/datastore_search?resource_id=2c44d782-3365-44e3-aefb-2c8b8363a1bc&limit=5&q=title:jones'
response <- GET(url)
# Verificar el estado de la solicitud
if (http_status(response)$status_type == "Success") {
# Parsear la respuesta JSON
json_content <- content(response, "text")
data <- fromJSON(json_content)$result$records
# Convertir a un dataframe
df <- as.data.frame(data)
# Imprimir el dataframe
print(df)
} else {
# Manejar el error si la solicitud no fue exitosa
print("Error al obtener los datos.")
}
library(httr)
library(jsonlite)
url <- 'https://datos.gob.cl/api/3/action/datastore_search?resource_id=2c44d782-3365-44e3-aefb-2c8b8363a1bc&limit=5&q=title:jones'
response <- GET(url)
# Verificar el estado de la solicitud
status <- http_status(response)$status_type
print(status)
# Imprimir la respuesta completa
print(content(response))
library(httr)
library(jsonlite)
url <- 'https://datos.gob.cl/api/3/action/datastore_search?resource_id=2c44d782-3365-44e3-aefb-2c8b8363a1bc&limit=5&q=title:jones'
response <- GET(url)
# Verificar el estado de la solicitud
status <- http_status(response)$status_type
print(status)
# Imprimir la respuesta completa
print(content(response))
response
library(httr)
library(jsonlite)
url <- 'https://datos.gob.cl/api/3/action/datastore_search?resource_id=2c44d782-3365-44e3-aefb-2c8b8363a1bc&limit=5&q=title:jones'
response <- GET(url)
# Verificar el estado de la solicitud
status <- http_status(response)$status_type
if (status == "Success") {
# Parsear la respuesta JSON
json_content <- content(response, "text")
parsed_json <- fromJSON(json_content)
# Extraer los registros
data <- parsed_json$result$records
# Convertir a un dataframe
df <- as.data.frame(data)
# Imprimir el dataframe
print(df)
} else {
print("Error al obtener los datos.")
}
library(httr)
library(jsonlite)
url <- 'https://datos.gob.cl/api/3/action/datastore_search?resource_id=2c44d782-3365-44e3-aefb-2c8b8363a1bc&limit=5&q=title:jones'
response <- GET(url)
# Verificar si la solicitud fue exitosa
if (status_code(response) == 200) {
# Parsear la respuesta JSON
json_content <- content(response, "text")
parsed_json <- fromJSON(json_content)
# Extraer los registros
data <- parsed_json$result$records
# Convertir a un dataframe
df <- as.data.frame(data)
# Imprimir el dataframe
print(df)
} else {
print("Error al obtener los datos.")
}
View(data)
View(df)
library(httr)
library(jsonlite)
url <- 'https://datos.gob.cl/api/3/action/datastore_search?resource_id=2c44d782-3365-44e3-aefb-2c8b8363a1bc&limit=5&q=title:jones'
response <- GET(url)
# Verificar si la solicitud fue exitosa
if (status_code(response) == 200) {
# Parsear la respuesta JSON
json_content <- content(response, "text")
print(json_content)
} else {
print("Error al obtener los datos.")
}
library(httr)
library(jsonlite)
url <- 'https://datos.gob.cl/api/3/action/datastore_search?resource_id=2c44d782-3365-44e3-aefb-2c8b8363a1bc&limit=5&q=title:jones'
response <- GET(url)
# Verificar si la solicitud fue exitosa
if (status_code(response) == 200) {
# Parsear la respuesta JSON
json_content <- content(response, "text")
print(json_content)
} else {
print("Error al obtener los datos.")
}
library(httr)
library(jsonlite)
url <- 'https://datos.gob.cl/api/3/action/datastore_search?resource_id=2c44d782-3365-44e3-aefb-2c8b8363a1bc&limit=5&q=title:jones'
response <- GET(url)
library(httr)
library(jsonlite)
# Definir los par치metros de la solicitud
data <- list(
resource_id = '2c44d782-3365-44e3-aefb-2c8b8363a1bc',
limit = 5,
q = 'jones'
)
# Realizar la solicitud HTTP
response <- GET(
url = 'https://datos.gob.cl/api/3/action/datastore_search',
query = data
)
# Verificar si la solicitud fue exitosa
if (status_code(response) == 200) {
# Parsear la respuesta JSON
json_content <- content(response, "text")
parsed_json <- fromJSON(json_content)
# Extraer el total de resultados
total_results <- parsed_json$result$total
print(paste("Total results found:", total_results))
} else {
print("Error al obtener los datos.")
}
library(httr)
library(jsonlite)
# Definir los par치metros de la solicitud
data <- list(
resource_id = '2c44d782-3365-44e3-aefb-2c8b8363a1bc',
limit = 5,
q = 'jones'
)
# Realizar la solicitud HTTP
response <- GET(
url = 'https://datos.gob.cl/api/3/action/datastore_search',
query = data
)
# Verificar si la solicitud fue exitosa
if (status_code(response) == 200) {
# Parsear la respuesta JSON
json_content <- content(response, "text")
parsed_json <- fromJSON(json_content)
# Extraer el total de resultados
total_results <- parsed_json$result$total
print(paste("Total results found:", total_results))
} else {
print("Error al obtener los datos.")
}
library(httr)
library(jsonlite)
# Definir los par치metros de la solicitud
data <- list(
resource_id = '2c44d782-3365-44e3-aefb-2c8b8363a1bc',
limit = 5,
q = 'oriente'
)
# Realizar la solicitud HTTP
response <- GET(
url = 'https://datos.gob.cl/api/3/action/datastore_search',
query = data
)
# Verificar si la solicitud fue exitosa
if (status_code(response) == 200) {
# Parsear la respuesta JSON
json_content <- content(response, "text")
parsed_json <- fromJSON(json_content)
# Extraer el total de resultados
total_results <- parsed_json$result$total
print(paste("Total results found:", total_results))
} else {
print("Error al obtener los datos.")
}
library(httr)
library(jsonlite)
url <- 'https://datos.gob.cl/api/3/action/datastore_search?resource_id=2c44d782-3365-44e3-aefb-2c8b8363a1bc&limit=5&q=title'
response <- GET(url)
# Verificar si la solicitud fue exitosa
if (status_code(response) == 200) {
# Parsear la respuesta JSON
json_content <- content(response, "text")
print(json_content)
} else {
print("Error al obtener los datos.")
}
library(httr)
library(jsonlite)
# Definir los par치metros de la solicitud
data <- list(
resource_id = '2c44d782-3365-44e3-aefb-2c8b8363a1bc',
limit = 5,
q = 'jones'
)
# Realizar la solicitud HTTP
response <- GET(
url = 'https://datos.gob.cl/api/3/action/datastore_search',
query = data
)
# Verificar si la solicitud fue exitosa
if (status_code(response) == 200) {
# Parsear la respuesta JSON
json_content <- content(response, "text")
parsed_json <- fromJSON(json_content)
# Imprimir los datos
print(parsed_json$result)
} else {
print("Error al obtener los datos.")
}
library(httr)
library(jsonlite)
# Definir la URL de la API
url <- "https://datos.gob.cl/api/3/action/datastore_search"
# Realizar la solicitud GET a la API
response <- GET(url)
# Verificar si la solicitud fue exitosa
if (status_code(response) == 200) {
# Leer el contenido de la respuesta
content <- content(response, "text")
# Convertir el contenido JSON en un objeto R
data <- fromJSON(content)
print(data)
} else {
print("Error al obtener los datos.")
}
library(httr)
library(jsonlite)
# Definir la URL de la API
url <- "https://datos.gob.cl/api/3/action/datastore_search"
# Realizar la solicitud GET a la API
response <- GET(url)
# Verificar si la solicitud fue exitosa
if (status_code(response) == 200) {
# Leer el contenido de la respuesta
content <- content(response, "text")
# Convertir el contenido JSON en un objeto R
data <- fromJSON(content)
print(data)
} else {
print("Error al obtener los datos.")
}
library(httr)
# Definir la URL de la API
url <- "https://datos.gob.cl/api/3/action/datastore_search"
# Realizar la solicitud GET a la API
response <- GET(url)
# Verificar si la solicitud fue exitosa
if (status_code(response) == 200) {
# Leer el contenido de la respuesta
content <- content(response, "text")
print(content)
} else {
print("Error al obtener los datos.")
}
library(httr)
# Definir la URL de la API
url <- "https://datos.gob.cl/api/3/action/datastore_search?resource_id=2c44d782-3365-44e3-aefb-2c8b8363a1bc"
# Realizar la solicitud GET a la API
response <- GET(url)
# Verificar si la solicitud fue exitosa
if (status_code(response) == 200) {
# Leer el contenido de la respuesta
content <- content(response, "text")
print(content)
} else {
print("Error al obtener los datos.")
}
library(httr)
library(jsonlite)
# Definir la URL de la API
url <- "https://datos.gob.cl/api/3/action/datastore_search?resource_id=2c44d782-3365-44e3-aefb-2c8b8363a1bc"
# Realizar la solicitud GET a la API
response <- GET(url)
# Verificar si la solicitud fue exitosa
if (status_code(response) == 200) {
# Leer el contenido de la respuesta
content <- content(response, "text")
# Convertir el contenido JSON en un objeto R
data <- fromJSON(content)
# Extraer los registros
records <- data$result$records
# Convertir los registros en un dataframe
df <- as.data.frame(records)
# Imprimir el dataframe
print(df)
} else {
print("Error al obtener los datos.")
}
View(df)
View(records)
View(df)
library(httr)
library(jsonlite)
# Definir la URL de la API
url <- "https://datos.gob.cl/api/3/action/datastore_search?resource_id=2c44d782-3365-44e3-aefb-2c8b8363a1bc"
# Realizar la solicitud GET a la API
response <- GET(url)
# Verificar si la solicitud fue exitosa
if (status_code(response) == 200) {
# Leer el contenido de la respuesta
content <- content(response, "text")
# Convertir el contenido JSON en un objeto R
data <- fromJSON(content)
# Extraer los registros
records <- data$result$records
# Convertir los registros en un dataframe
df <- as.data.frame(records)
# Imprimir el dataframe
print(df)
} else {
print("Error al obtener los datos.")
}
library(httr)
library(jsonlite)
# Definir la URL de la API
url <- "https://datos.gob.cl/api/3/action/datastore_search?resource_id=2c44d782-3365-44e3-aefb-2c8b8363a1bc"
# Realizar la solicitud GET a la API
response <- GET(url)
# Verificar si la solicitud fue exitosa
if (status_code(response) == 200) {
# Leer el contenido de la respuesta
content <- content(response, "text")
# Convertir el contenido JSON en un objeto R
data <- fromJSON(content)
# Extraer los registros
records <- data$result$records
# Convertir los registros en un dataframe
df <- as.data.frame(records)
# Imprimir el dataframe
print(df)
} else {
print("Error al obtener los datos.")
}
library(httr)
library(jsonlite)
# Definir la URL de la API
url <- "https://datos.gob.cl/api/3/action/datastore_search?resource_id=2c44d782-3365-44e3-aefb-2c8b8363a1bc"
# Realizar la solicitud GET a la API
response <- GET(url)
content <- content(response, "text")
data <- fromJSON(content)
records <- data$result$records
df <- as.data.frame(records)
library(httr)
library(jsonlite)
# Definir la URL de la API
url <- "https://datos.gob.cl/api/3/action/datastore_search?"
# Realizar la solicitud GET a la API
response <- GET(url)
content <- content(response, "text")
data <- fromJSON(content)
records <- data$result$records
df <- as.data.frame(records)
library(httr)
library(jsonlite)
# Definir la URL de la API
url <- "https://datos.gob.cl/api/3/action/datastore_search"
# Realizar la solicitud GET a la API
response <- GET(url)
content <- content(response, "text")
data <- fromJSON(content)
records <- data$result$records
df <- as.data.frame(records)
library(httr)
library(jsonlite)
# Definir la URL de la API
url <- "https://datos.gob.cl/api/3/action/datastore_search?resource_id=2c44d782-3365-44e3-aefb-2c8b8363a1bc&limit=5"
# Realizar la solicitud GET a la API
response <- GET(url)
content <- content(response, "text")
data <- fromJSON(content)
records <- data$result$records
df <- as.data.frame(records)
library(httr)
library(jsonlite)
# Definir la URL de la API
url <- "https://datos.gob.cl/api/3/action/datastore_search?resource_id=2c44d782-3365-44e3-aefb-2c8b8363a1bc&limit=5000"
# Realizar la solicitud GET a la API
response <- GET(url)
content <- content(response, "text")
data <- fromJSON(content)
records <- data$result$records
df <- as.data.frame(records)
View(df)
library(httr)
library(jsonlite)
# Definir la URL de la API
url <- "https://datos.gob.cl/api/3/action/datastore_search?resource_id=2c44d782-3365-44e3-aefb-2c8b8363a1bc&limit=7000"
# Realizar la solicitud GET a la API
response <- GET(url)
content <- content(response, "text")
data <- fromJSON(content)
establecimientos_nacional <- data$result$records
library(httr)
library(jsonlite)
#Este script lee la API de los establecimientos de salud en Chile que esta alojada en el siguiente link
#https://datos.gob.cl/dataset/establecimientos-de-salud-vigentes/resource/2c44d782-3365-44e3-aefb-2c8b8363a1bc
# Definir la URL de la API
url <- "https://datos.gob.cl/api/3/action/datastore_search?resource_id=2c44d782-3365-44e3-aefb-2c8b8363a1bc&limit=7000"
# Realizar la solicitud GET a la API
response <- GET(url)
content <- content(response, "text")
data <- fromJSON(content)
establecimientos_nacional <- data$result$records
View(establecimientos_nacional)
library(httr)
library(jsonlite)
#Este script lee la API de los establecimientos de salud en Chile que esta alojada en el siguiente link
#https://datos.gob.cl/dataset/establecimientos-de-salud-vigentes/resource/2c44d782-3365-44e3-aefb-2c8b8363a1bc
# Definir la URL de la API
url <- "https://datos.gob.cl/api/3/action/datastore_search?resource_id=2c44d782-3365-44e3-aefb-2c8b8363a1bc&limit=17000"
# Realizar la solicitud GET a la API
response <- GET(url)
content <- content(response, "text")
data <- fromJSON(content)
establecimientos_nacional <- data$result$records
rm(data, response, content, url)
View(establecimientos_nacional)
install.packages("httr", "jsonlite")
# Carga el paquete arrow
# este script busca los datos web, los descarga y guarda en DF
library(arrow)
# Especifica la ruta del archivo Parquet
url_archivo  <- "https://datos.gob.cl/dataset/606ef5bb-11d1-475b-b69f-b980da5757f4/resource/ae6c9887-106d-4e98-8875-40bf2b836041/download/at_urg_respiratorio_semanal.parquet"
# Lee el archivo Parquet desde la URL
datos_parquet <- read_parquet(url_archivo)
install.packages("arrow")
install.packages("arrow")
library(arrow)
# Especifica la ruta del archivo Parquet
url_archivo  <- "https://datos.gob.cl/dataset/606ef5bb-11d1-475b-b69f-b980da5757f4/resource/ae6c9887-106d-4e98-8875-40bf2b836041/download/at_urg_respiratorio_semanal.parquet"
# Lee el archivo Parquet desde la URL
datos_parquet <- read_parquet(url_archivo)
library(arrow)
# Especifica la ruta del archivo Parquet
url_archivo  <- "https://datos.gob.cl/dataset/606ef5bb-11d1-475b-b69f-b980da5757f4/resource/ae6c9887-106d-4e98-8875-40bf2b836041/download/at_urg_respiratorio_semanal.parquet"
# Lee el archivo Parquet desde la URL
datos_parquet <- read_parquet(url_archivo)
timeout_seconds <- 120
# Lee el archivo Parquet desde la URL
datos_parquet <- read_parquet(url_archivo, timeout = timeout_seconds)
library(arrow)
# Especifica la ruta del archivo Parquet
url_archivo <- "https://datos.gob.cl/dataset/606ef5bb-11d1-475b-b69f-b980da5757f4/resource/ae6c9887-106d-4e98-8875-40bf2b836041/download/at_urg_respiratorio_semanal.parquet"
# Ajusta el tiempo de espera a 120 segundos (por ejemplo)
timeout_seconds <- 120
# Descarga el archivo Parquet desde la URL a tu sistema de archivos local
download.file(url_archivo, "at_urg_respiratorio_semanal.parquet", mode = "wb", timeout = timeout_seconds)
library(arrow)
# Especifica la ruta del archivo Parquet
url_archivo <- "https://datos.gob.cl/dataset/606ef5bb-11d1-475b-b69f-b980da5757f4/resource/ae6c9887-106d-4e98-8875-40bf2b836041/download/at_urg_respiratorio_semanal.parquet"
# Ajusta el tiempo de espera a 120 segundos (por ejemplo)
timeout_seconds <- 120
# Descarga el archivo Parquet desde la URL a tu sistema de archivos local
download.file(url_archivo, "at_urg_respiratorio_semanal.parquet", mode = "wb", timeout = timeout_seconds)
datos_parquet <- arrow::read_parquet("at_urg_respiratorio_semanal.parquet")
datos_parquet <- read_parquet("at_urg_respiratorio_semanal.parquet")
download.file(url_archivo, "at_urg_respiratorio_semanal.parquet", mode = "wb", timeout = timeout_seconds)
